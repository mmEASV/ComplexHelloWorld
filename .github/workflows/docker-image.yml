name: Build and Deploy Docker Services

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Add remote server to known_hosts
        run: |
          ssh-keyscan ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          
      - name: Deploy to server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'ENDSSH'
            # Check if ComplexHelloWorld directory exists, if not clone it
            if [ ! -d ~/ComplexHelloWorld ]; then
              echo "Directory not found. Cloning repository..."
              git clone ${{ github.server_url }}/${{ github.repository }}.git ~/ComplexHelloWorld
            fi

            # Navigate to project directory
            cd ~/ComplexHelloWorld

            # Pull latest code
            git pull

            # Update Dockerfiles to match the actual project structure

            # 1. Update GreetingService Dockerfile
            sed -i 's/GreetingApi\/GreetingApi.csproj/GreetingService\/GreetingService.csproj/g' GreetingService/Dockerfile
            sed -i 's/\/src\/GreetingApi/\/src\/GreetingService/g' GreetingService/Dockerfile
            sed -i 's/GreetingApi.dll/GreetingService.dll/g' GreetingService/Dockerfile

            # 2. Update LanguageService Dockerfile
            sed -i 's/LanguageApi\/LanguageApi.csproj/LanguageService\/LanguageService.csproj/g' LanguageService/Dockerfile
            sed -i 's/\/src\/LanguageApi/\/src\/LanguageService/g' LanguageService/Dockerfile
            sed -i 's/LanguageApi.dll/LanguageService.dll/g' LanguageService/Dockerfile

            # 3. Update PlanetService Dockerfile
            sed -i 's/PlanetApi\/PlanetApi.csproj/PlanetService\/PlanetService.csproj/g' PlanetService/Dockerfile
            sed -i 's/\/src\/PlanetApi/\/src\/PlanetService/g' PlanetService/Dockerfile
            sed -i 's/PlanetApi.dll/PlanetService.dll/g' PlanetService/Dockerfile

            # Build and restart services using docker-compose
            docker compose build
            docker compose up -d
          ENDSSH
      
